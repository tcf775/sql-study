AWSTemplateFormatVersion: "2010-09-09"
Description: "StudySQLHandsOn on EC2"

Parameters:
  AdminEmail:
    Type: String
    Description: The admin email
  AdminPassword:
    Type: String
    Description: The admin password
  VpcCidrBlock:
    Type: String
    Description: The CIDR block for the VPC
  SubnetCidrBlock:
    Type: String
    Description: The CIDR block for the Subnet


Resources:
# VPC
  SqlStudyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: "SQL-Study-VPC"
# Subnet
  SqlStudyPublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref SqlStudyVPC
      CidrBlock: !Ref SubnetCidrBlock
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "SQL-Study-PublicSubnet"

# InternetGateway
  SqlStudyInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "SQL-Study-IGW"
  AttachIGW:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref SqlStudyVPC
      InternetGatewayId: !Ref SqlStudyInternetGateway
 # Network/Public
  SqlStudyPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SqlStudyVPC
      Tags:
        - Key: "Name"
          Value: "SQL-Study-PublicRouteTable"
  SqlStudyPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: SqlStudyInternetGateway
    Properties:
      RouteTableId: !Ref SqlStudyPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref SqlStudyInternetGateway
  PublicSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref SqlStudyPublicSubnet
      RouteTableId: !Ref SqlStudyPublicRouteTable
  #EC2
  SqlStudyEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-02a405b3302affc24 # amazon linux 2023
      InstanceType: t2.micro
      SubnetId: !Ref SqlStudyPublicSubnet
      IamInstanceProfile: !Ref 
      SecurityGroupIds:
      - !GetAtt SqlStudySecurityGroup.GroupId
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo dnf install -y docker
          sudo systemctl enable --now docker
          sudo usermod -aG docker ec2-user
          
          DOCKER_CONFIG=${!DOCKER_CONFIG:-/usr/local/lib/docker}
          sudo mkdir -p ${!DOCKER_CONFIG}/cli-plugins
          sudo curl -SL https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-linux-x86_64 -o ${!DOCKER_CONFIG}/cli-plugins/docker-compose
          sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose

          sudo dnf install -y git

          cd ~
          git clone https://github.com/tcf775/sql-study.git
          cd sql-study
          sed -i 's/#admin_email/${AdminEmail}/g' docker-compose.yml
          sed -i 's/#admin_password/${AdminPassword}/g' docker-compose.yml
          docker compose up -d

      Tags:
        - Key: "Name"
          Value: "SQL-Study-EC2-Instance"
  SqlStudyInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref SqlStudyInstanceRole
  SqlStudyInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      Tags:
        - Key: "Name"
          Value: "SQL-Study-InstanceRole"

  SqlStudySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref SqlStudyVPC
      GroupDescription: Enable access to port 3000
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: "Name"
          Value: "SQL-Study-SecurityGroup"
          
Outputs:
  InstanceUrl:
    Description: The URL of the EC2 instance
    Value: !Sub "http://${SqlStudyEC2Instance.PublicDnsName}:3000"